version: '3.8'

services:
  # Nginx - Web server and reverse proxy
  nginx:
    image: nginx:alpine
    container_name: shul_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./frontend/build:/usr/share/nginx/html:ro
      - ./backend/media:/usr/share/nginx/media:ro
      - ./backend/staticfiles:/usr/share/nginx/static:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - django
    networks:
      - shul_network

  # Django - Backend API
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shul_django
    restart: unless-stopped
    command: gunicorn shul_display.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 60
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
      - ./backend/staticfiles:/app/staticfiles
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - shul_network

  # PostgreSQL - Database
  postgres:
    image: postgres:15-alpine
    container_name: shul_postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - shul_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis - Cache and Celery broker
  redis:
    image: redis:7-alpine
    container_name: shul_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - shul_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Celery Worker - Background tasks
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shul_celery_worker
    restart: unless-stopped
    command: celery -A shul_display worker --loglevel=info --concurrency=2
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - shul_network

  # Celery Beat - Task scheduler
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shul_celery_beat
    restart: unless-stopped
    command: celery -A shul_display beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - shul_network

networks:
  shul_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local
